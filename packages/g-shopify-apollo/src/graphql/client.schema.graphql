directive @client on FIELD_DEFINITION


interface Extended_ID  {
    #    sid : Int
    gid : String
    cacheID:String
}

interface ShopifyNode {
    handle:String
    position:Int
}

interface ShopifyProductNode {
    product_id: ID!
    product:Product!
}

input VariantFilter {
    index:Int
    id:ID
}


extend type Product implements Extended_ID{
    available:Boolean
    gid : String
    cacheID:String

    testing:String @client
    Variants: [ProductVariant!]! @client
    Images: [Image!]! @client
}

extend type ProductVariant implements ShopifyNode & ShopifyProductNode & Extended_ID {
    isInCart: Boolean!
    handle:String
    position:Int

    gid : String
    cacheID:String

    product_id: ID!
    image_id:ID!
    SelectedOptions: [ProductOptionValue!]!
    pivot_selected_options: [VariantOption!]!
}
extend type ProductOption implements ShopifyNode & ShopifyProductNode{
    option_values:[ProductOptionValue!]

    handle:String
    title:String
    position:Int
    product_id: ID!
    product:Product!
}
extend type Image implements ShopifyProductNode{
    variants:[ProductVariant!]

    product_id: ID!
    product:Product!
    position:Int
}

type ProductOptionValue implements ShopifyNode & ShopifyProductNode{

    key:String!

    handle: String
    parent_handle: String

    Variants:[ProductVariant!]!
    pivot_variants:[VariantOption!]!

    product_id: ID!
    product:Product!

    title: String
    position:Int

    option_id: ID!
    option: ProductOption!
}
type VariantOption implements ShopifyProductNode{
    parent_handle:String!

    option_value_handle: String!
    option_value_key: String!
    option_value:ProductOptionValue!

    product_id : ID!
    product: Product!

    variant_id : ID!
    variant:ProductVariant!
}

# Instance Options Toggles #
interface InstanceOptions {
    add_to_cart_enabled:Boolean!
    quantity_editable:Boolean!
    product_option_editable: OptionEditableValues!
    variant_editable:Boolean!
    attributes_editable :Boolean!
}
# NOT IN USE YET #
enum EditableOptions {
    QUANTITY_EDITABLE
    VARIANT_EDITABLE
    OPTIONS_EDITABLE
    ATTRIBUTES_EDITABLE
    ADD_TO_CART_EDITABLE
}

enum Selection_Mode_Options {
    NORMAL
    EXTENDED
    READ_ONLY
    LINE_ITEM
    GROUP_ITEM
}
# DONE NOT IN USE YET #

enum OptionEditableValues {
    ALL
    NONE
    OPTION
}

type ProductInstance {
    id: ID!
    quantity: Int!

    customAttributes : [Attribute]

    group_id:String
    group:ProductGroup
    variant : ProductVariant
    variant_id: String

    product_handle:String
    product: Product
}
type ProductGroup {
    id: ID!
    available:Boolean
    items: [ProductInstance!]!
    max_children: Int
    add_to_cart_enabled:Boolean
}

query testproductop {
    allVariants @client{
        id
        __typename
        title
    }
}

#
# This query gives a list of possible node types
#
query possibleNodes($id: ID!) {
    node(id: $id) {
        ...ProductFragment
    }
}





query variantByIndex($handle: String!, $index:Int!) {
    productAlias:product(handle: $handle) {
        id
        handle
    }
}

extend type QueryRoot{
    testProduct(index:Int!) : Product
    testOption(index:Int!) : ProductOption
    allVariants: [ProductVariant] @client
}
